name: CI CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*' # e.g., v1.0.0, v1.2.3
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  packages: write

jobs:
  # Build and test on every commit/PR
  build-and-test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Build application
      run: npm run package
      env:
        # Set environment variables for build
        NODE_ENV: production

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: github.event_name == 'pull_request'
      with:
        name: build-${{ matrix.os }}-node-${{ matrix.node-version }}
        path: out/
        retention-days: 7

  # Create releases when tags are pushed
  release:
    name: Create Release
    runs-on: windows-latest
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Build for all platforms
      run: npm run make
      env:
        NODE_ENV: production

    - name: List build artifacts
      run: |
        echo "Available files in out/ directory:"
        find out/ -type f -name "spectra*" | head -20

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          out/**/spectra-*.exe
          out/**/spectra-*.dmg
          out/**/spectra-*.AppImage
          out/**/spectra-*.deb
          out/**/spectra-*.rpm
          out/**/spectra-*.zip
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Security audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=high

  # Type checking - disabled due to node_modules type conflicts
  # type-check:
  #   name: Type Check
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: 20
  #       cache: 'npm'
  #       cache-dependency-path: package-lock.json
  #
  #   - name: Install dependencies
  #     run: npm ci
  #
  #   - name: Run TypeScript type checking
  #     run: npx tsc --noEmit
